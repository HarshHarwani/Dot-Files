X2 = LIMIT X1 10;
MAX_VOL = FOREACH X2 GENERATE $0, $1;
Y1 = ORDER Z BY $1 ASC;
Y2 = LIMIT Y1 10;
MIN_VOL = FOREACH Y2 GENERATE $0, $1;
MAX_MIN = UNION MAX_VOL , MIN_VOL;
store MAX_MIN into 'hdfs:///pigdata/hw3_out';
temp_stock_2_grouped = GROUP temp_stock_1 BY (stock_name,stock_month_year);
temp_stock_3 = FOREACH temp_stock_2_grouped GENERATE flatten(temp_stock_2_grouped.stock_name),flatten(temp_stock_2_grouped.stock_month_year),MIN(temp_stock_1.stock_date) AS min_date,MAX(temp_stock_1.stock_date) AS max_date;
temp_A = LOAD 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
dump A;
B = FILTER A BY stock_date neq 'Date';
C = FOREACH B GENERATE stock_name,stock_date,adj_close;
D = FOREACH C generate stock_name,SUBSTRING(stock_date,0,7) AS stock_month_year,(float)SUBSTRING((chararray)stock_date,8,10) AS stock_day,adj_close;
E = GROUP D BY (stock_name,stock_month_year);
F = FOREACH E {
sortdesc = order D by stock_day desc;
high = limit sortdesc 1;
sortasc = order D by stock_day;
low = limit sortasc 1;
generate flatten(high),flatten(low);
};
G = FOREACH F GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj; 
H = FOREACH G GENERATE stock_name, stock_month_year,((max_adj-min_adj)/(min_adj)) AS xiValues;
I = GROUP H BY stock_name;
J = FOREACH I GENERATE group, AVG(H.xiValues);
K = JOIN H BY stock_name,J BY $0;
M = FOREACH K GENERATE $0 As stock_name,$1 As stock_month_year,($2-$4)*($2-$4) AS averageXiValues2;
N = FOREACH M GENERATE $0 As stock_name,$1 As stock_month_year,$2 AS averageXiValues2;
P = GROUP N BY stock_name;
sum = FOREACH P GENERATE group,SUM(N.averageXiValues2);
noOfMonths = FOREACH P GENERATE group, (float)(COUNT(N)-1);
Q = JOIN sum BY $0, noOfMonths BY $0;
R = FOREACH Q GENERATE $0, $1, $3;
V = FOREACH R GENERATE $0 , SQRT($1 / $2);
W = FOREACH V GENERATE $0, $1;
Z = FILTER W BY $1 != 0.0;
X1 = ORDER Z BY $1 DESC;
X2 = LIMIT X1 10;
MAX_VOL = FOREACH X2 GENERATE $0, $1;
Y1 = ORDER Z BY $1 ASC;
Y2 = LIMIT Y1 10;
MIN_VOL = FOREACH Y2 GENERATE $0, $1;
MAX_MIN = UNION MAX_VOL , MIN_VOL;
store MAX_MIN into 'hdfs://localhost:9000/hw3_out_new';
 10;
MAX_VOL = FOREACH X2 GENERATE $0, $1;
Y1 = ORDER Z BY $1 ASC;
Y2 = LIMIT Y1 10;
MIN_VOL = FOREACH Y2 GENERATE $0, $1;
MAX_MIN = UNION MAX_VOL , MIN_VOL;
store MAX_MIN into 'hdfs:///pigdata/hw3_out';
--store MIN_VOL into 'dic_out'; 
 A = LOAD 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';
C = FOREACH B GENERATE stock_name,stock_date,adj_close;
D = FOREACH C generate stock_name,SUBSTRING(stock_date,0,7) AS stock_month_year,(float)SUBSTRING((chararray)stock_date,8,10) AS stock_day,adj_close;
E = GROUP D BY (stock_name,stock_month_year);
F = FOREACH E {
sortdesc = order D by stock_day desc;
high = limit sortdesc 1;
sortasc = order D by stock_day;
low = limit sortasc 1;
generate flatten(high),flatten(low);
};
G = FOREACH F GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj; 
H = FOREACH G GENERATE stock_name, stock_month_year,((max_adj-min_adj)/(min_adj)) AS xiValues;
I = GROUP H BY stock_name;
J = FOREACH I GENERATE group, AVG(H.xiValues);
K = JOIN H BY stock_name,J BY $0;
M = FOREACH K GENERATE $0 As stock_name,$1 As stock_month_year,($2-$4)*($2-$4) AS averageXiValues2;
N = FOREACH M GENERATE $0 As stock_name,$1 As stock_month_year,$2 AS averageXiValues2;
P = GROUP N BY stock_name;
sum = FOREACH P GENERATE group,SUM(N.averageXiValues2);
noOfMonths = FOREACH P GENERATE group, (float)(COUNT(N)-1);
Q = JOIN sum BY $0, noOfMonths BY $0;
R = FOREACH Q GENERATE $0, $1, $3;
V = FOREACH R GENERATE $0 , SQRT($1 / $2);
W = FOREACH V GENERATE $0, $1;
M = FOREACH L GENERATE $0, $1, $2, $4, ($2-$4), ($2-$4)*($2-$4);
N = FOREACH M GENERATE $0,$1, $5;
P = GROUP N BY $0;
sum = FOREACH P GENERATE  group, SUM(N.$2);
noOfMonths = FOREACH P GENERATE group, (float)(COUNT(N)-1);
Q = JOIN sum BY $0, noOfMonths BY $0;
R = FOREACH Q GENERATE $0, $1, $3;
V = FOREACH R GENERATE $0 , SQRT($1 / $2);
W = FOREACH V GENERATE $0, $1;
Z = FILTER W BY $1 != 0.0;
X1 = ORDER Z BY $1 DESC;
X2 = LIMIT X1 10;
MAX_VOL = FOREACH X2 GENERATE $0, $1;
Y1 = ORDER Z BY $1 ASC;
Y2 = LIMIT Y1 10;
MIN_VOL = FOREACH Y2 GENERATE $0, $1;
MAX_MIN = UNION MAX_VOL , MIN_VOL;
store MAX_MIN into 'hdfs://localhost:9000/hw3_out';
A = load 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0, $1, $7;
D = FOREACH C GENERATE $0, SUBSTRING((chararray)$1,0,7),(float)SUBSTRING((chararray)$1,8,10), (float)$2;
E = GROUP D BY ($0,$1);
F = foreach E {
        sorted_desc = order D by $2 desc;
        high    = limit sorted_desc 1;
sorted_asc = order D by $2 asc;
        low    = limit sorted_asc 1;
        generate flatten(high), flatten(low);
};
G = FOREACH F GENERATE $0, $1, $3, $7;
H = FOREACH G GENERATE $0, $1, $2, $3, (($2-$3)/($3));
I = FOREACH H GENERATE $0, $1, $4;
J = GROUP I BY $0 ;
K = FOREACH J GENERATE group, AVG(I.$2) ;
L = JOIN I BY $0, K BY $0;
M = FOREACH L GENERATE $0, $1, $2, $4, ($2-$4), ($2-$4)*($2-$4);
N = FOREACH M GENERATE $0,$1, $5;
P = GROUP N BY $0;
sum = FOREACH P GENERATE  group, SUM(N.$2);
noOfMonths = FOREACH P GENERATE group, (float)(COUNT(N)-1);
Q = JOIN sum BY $0, noOfMonths BY $0;
R = FOREACH Q GENERATE $0, $1, $3;
V = FOREACH R GENERATE $0 , SQRT($1 / $2);
W = FOREACH V GENERATE $0, $1;
Z = FILTER W BY $1 != 0.0;
X1 = ORDER Z BY $1 DESC;
X2 = LIMIT X1 10;
MAX_VOL = FOREACH X2 GENERATE $0, $1;
Y1 = ORDER Z BY $1 ASC;
Y2 = LIMIT Y1 10;
MIN_VOL = FOREACH Y2 GENERATE $0, $1;
MAX_MIN = UNION MAX_VOL , MIN_VOL;
store MAX_MIN into 'hdfs://localhost:9000/hw3_out_new_1';
A = load 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0, $1, $7;
D = FOREACH C GENERATE $0, SUBSTRING((chararray)$1,0,7),(float)SUBSTRING((chararray)$1,8,10), (float)$2;
E = GROUP D BY ($0,$1);
F = foreach E {
        sorted_desc = order D by $2 desc;
        high    = limit sorted_desc 1;
sorted_asc = order D by $2 asc;
        low    = limit sorted_asc 1;
        generate flatten(high), flatten(low);
};
G = FOREACH F GENERATE $0, $1, $3, $7;
H = FOREACH G GENERATE $0, $1, $2, $3, (($2-$3)/($3));
I = FOREACH H GENERATE $0, $1, $4;
o = Filter I 5;
o = FILTER I BY 5;
o = FILTER I 5;
clear
A = load 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0, $1, $7;
D = FOREACH C GENERATE $0, SUBSTRING((chararray)$1,0,7),(float)SUBSTRING((chararray)$1,8,10), (float)$2;
E = GROUP D BY ($0,$1);
F = foreach E {
        sorted_desc = order D by $2 desc;
        high    = limit sorted_desc 1;
sorted_asc = order D by $2 asc;
        low    = limit sorted_asc 1;
        generate flatten(high), flatten(low);
};
G = FOREACH F GENERATE $0, $1, $3, $7;
H = FOREACH G GENERATE $0, $1, $2, $3, (($2-$3)/($3));
I = FOREACH H GENERATE $0, $1, $4;
J = GROUP I BY $0 ;
O = LIMIT J 1;
dump O;
A = load 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0, $1, $7;
D = FOREACH C GENERATE $0, SUBSTRING((chararray)$1,0,7),(float)SUBSTRING((chararray)$1,8,10), (float)$2;
E = GROUP D BY ($0,$1);
F = foreach E {
        sorted_desc = order D by $2 desc;
        high    = limit sorted_desc 1;
sorted_asc = order D by $2 asc;
        low    = limit sorted_asc 1;
        generate flatten(high), flatten(low);
};
G = FOREACH F GENERATE $0, $1, $3, $7;
H = FOREACH G GENERATE $0, $1, $2, $3, (($2-$3)/($3));
I = FOREACH H GENERATE $0, $1, $4;
J = GROUP I BY $0 ;
O = LIMIT J 5;
dump 0;
dump o;
dump O;
K = FOREACH J GENERATE group, AVG(I.$2) ;
L = JOIN I BY $0, K BY $0;
M = FOREACH L GENERATE $0, $1, $2, $4, ($2-$4), ($2-$4)*($2-$4);
N = FOREACH M GENERATE $0,$1, $5;
O = FILTER N 5;
O = LIMIT N 5;
dump N;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';
C = FOREACH B GENERATE stock_name,stock_date,adj_close;
D = FOREACH C generate stock_name,SUBSTRING(stock_date,0,7) AS stock_month_year,(float)SUBSTRING((chararray)stock_date,8,10) AS stock_day,adj_close;
E = GROUP D BY (stock_name,stock_month_year);
F = FOREACH E {
sdesc = order D by stock_day desc;
max = limit sdesc 1;
sasc = order D by stock_day;
min = limit sasc 1;
generate flatten(maclear
A = load 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0, $1, $7;
D = FOREACH C GENERATE $0, SUBSTRING((chararray)$1,0,7),(float)SUBSTRING((chararray)$1,8,10), (float)$2;
E = GROUP D BY ($0,$1);
F = foreach E {
        sorted_desc = order D by $2 desc;
        high    = limit sorted_desc 1;
sorted_asc = order D by $2 asc;
        low    = limit sorted_asc 1;
        generate flatten(high), flatten(low);
};
G = FOREACH F GENERATE $0, $1, $3, $7;
dump G;
A = load 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
dump A;
B = FILTER A BY stock_date neq 'Date';
B = FILTER A BY $1 neq 'Date';
dump B;
C = FOREACH B GENERATE $0, $1, $7;
dump C;
A = load 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
dump C;
A = load 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0, $1, $7;
dump C;
A = load 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
dump A;
B = FILTER A BY $1 neq 'Date';
dump B;
C = FOREACH B GENERATE $0, $1, $7;
dump C;
dump B;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';
A = LOAD 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';clear
ame,SUBSTRING(stock_date,0,7) AS stock_month_year,(float)SUBSTRING((chararray)stock_date,8,10) AS stock_day,adj_close;
E = GROUP D BY (stock_name,stock_month_year);
F = FOREACH E {
sdesc = order D by stock_day desc;
max = limit sdesc 1;
sasc = order D by stock_day;
min = limit sasc 1;
generate flatten(max),flatten(min);
};
G = FOREACH F GENERATE $0, $1, $3, $7;
dump G;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';
C = FOREACH B GENERATE stock_name,stock_date,adj_close;
D = FOREACH C generate stock_name,SUBSTRING(stock_date,0,7) AS stock_month_year,(float)SUBSTRING(stock_date,8,10) AS stock_day,adj_close;
E = GROUP D BY (stock_name,stock_month_year);
F = FOREACH E {
sdesc = order D by stock_day desc;
max = limit sdesc 1;
sasc = order D by stock_day;
min = limit sasc 1;
generate flatten(max),flatten(min);
};
G = FOREACH F GENERATE $0, $1, $3, $7;
dump G;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
dump A;
B = FILTER A BY stock_date neq 'Date';
dump B;
C = FOREACH B GENERATE stock_name,stock_date,adj_close;
dump C;
C = FOREACH B GENERATE $0 AS stock_name, $1 AS stock_date, $7 AS adj_close;
dump C;
B = FILTER A BY stock_date neq 'Date';
C = FOREACH B GENERATE $0 AS stock_name, $1 AS stock_date,$7 AS adj_close;
dump C;
C = FOREACH B FOREACH B GENERATE $0, $1, $7;
dump C;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
B = FILTER A BY stock_date neq 'Date';
C = FOREACH B FOREACH B GENERATE $0, $1, $7;
dump C;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B FOREACH B GENERATE $0, $1, $7;
dump C;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0, $1, $7;
dump C;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
dump A;
B = FILTER A BY $1 neq 'Date';
dump B;
C = FOREACH B GENERATE $0 AS stock_name, $1 AS stock_date,$7 AS adj_close;
dump C;
C = FOREACH B GENERATE $0 AS stock_name, $1 AS stock_date,$8 AS adj_close;
C = FOREACH B GENERATE $0 AS stock_name, $1 AS stock_date,$7 AS adj_close;
dump C;
C = FOREACH B GENERATE $0,$1,$7;
dump C;
dump B;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:chararray,adj_close:float);
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0 AS stock_name, $1 AS stock_date,$7 AS adj_close;
dump C;
dump B;
C = FOREACH B GENERATE $0 AS stock_name, $1 AS stock_date,$7 AS adj_close;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_name,stock_date,open,high,low,close,volume,adj_close);
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0,$1,$7;
dump C;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0,$1,$7;
B = FILTER A BY $1 neq 'Date';
dump C;
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';
C = FOREACH B GENERATE $0,$1,$6;
dump C;
A = LOAD 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile') AS (stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';
C = FOREACH B GENERATE stock_name,stock_date,adj_close;
DUMP c;
DUMP C;
A = LOAD 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';
desribe B;
describe B;
clear
describe B;
dump B;
clear
A = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile') AS (stock_name:chararray,stock_date:chararray,open:float,high:float,low:float,close:float,volume:float,adj_close:float);
B = FILTER A BY stock_date neq 'Date';
desvribe B;
describe B;
clear
describe B;
C = FOREACH B GENERATE $0,$1,$7;
dump C;
B = FILTER A BY $1 neq 'Date';
C = FOREACH B GENERATE $0,$1,$7;
dump C;
B = FILTER A BY $1 neq 'Date';
maindata = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
temp1 = FILTER maindata BY $1 neq 'Date';
temp2 = FOREACH temp1 GENERATE $0,$1,$7;
dump temp2;
temp3 = FOREACH temp2 generate $0 AS stock_name,SUBSTRING($1,0,7) AS stock_month_year,(float)SUBSTRING((chararray)$1,8,10) AS stock_day, $2 AS adj_close;
temp3 = FOREACH temp2 generate $0 AS stock_name,SUBSTRING($1,0,7) AS stock_month_year,(float)SUBSTRING((chararray)$1,8,10) AS stock_day, $2 AS adj_close;clear
dump temp3;
temp4 = GROUP temp3 BY (stock_name,stock_month_year);
dump temp4;
temp4 = GROUP temp3 BY (stock_name,stock_month_year);
temp5 = FOREACH temp4 
{ dSort = order temp3 BY stock_day desc;
    max = LIMIT dSort 1;
    ASort = order temp3 BY stock_day; 
    min = LIMIT ASort 1;
    GENERATE flatten(max),flatten(min);
   }; 
dump temp5;
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj;
dump temp6;
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,(max_adj-min_adj)/min_adj AS xiValues; 
dump temp7;
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,(max_adj-min_adj)/min_adj AS xiValues; temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,(max_adj-min_adj)/min_adj AS xiValues; 
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,(max_adj-min_adj)/min_adj AS xiValues;
dump temp7;
clear
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stocclear
clear;
clear
temp7 = FOREACH temp6 GENERATE $0 AS stock_name, $1 AS stock_month_year AS stock_month_year,(max_adj-min_adj)/min_adj AS xiValues;
OREACH temp6 GENERATE $0 AS stock_name, $1 AS stock_month_year,(max_adj-min_adj)/min_adj AS xiValues; 
FOREACH temp6 GENERATE $0 AS stock_name, $1 AS stock_month_year,(max_adj-min_adj)/min_adj AS xiValues; 
clear
temp7 = FOREACH temp6 GENERATE $0 AS stock_name, $1 AS stock_month_year,(max_adj-min_adj)/min_adj AS xiValues; 
dump temp7;
temp7 = FOREACH temp6 GENERATE $0 AS stock_name, $1 AS stock_month_year,($2-$3)/$3 AS xiValues;
dump temp7;
clear
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,(float)$3 AS max_adj,(float)$7 AS min_adj;
clear
dump temp6;
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj; 
dump temp6;
temp7 = FOREACH temp6 GENERATE $0 AS stock_name, $1 AS stock_month_year,$2 AS max_adj,$3 AS min_adj;,(($2-$3)/$3) AS xiValues; 
temp7 = FOREACH temp6 GENERATE $0 AS stock_name, $1 AS stock_month_year,$2 AS max_adj,$3 AS min_adj,(($2-$3)/$3) AS xiValues;
dump temp7;
temp7 = FOREACH temp6 GENERATE $0, $1, $2, $3, (($2-$3)/($3));
dump temp7;
maindata = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
temp1 = FILTER maindata BY $1 neq 'Date';
temp2 = FOREACH temp1 GENERATE $0,$1,$7; 
temp3 = FOREACH temp2 generate $0 AS stock_name,SUBSTRING($1,0,7) AS stock_month_year,(float)SUBSTRING((chararray)$1,8,10) AS stock_day, $2 AS adj_close;
temp4 = GROUP temp3 BY (stock_name,stock_month_year);
temp5 = FOREACH temp4 
{ dSort = order temp3 BY stock_day desc;
    max = LIMIT dSort 1;
    ASort = order temp3 BY stock_day; 
    min = LIMIT ASort 1;
    GENERATE flatten(max),flatten(min);
   }; 
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj; 
dump temp6;
temp7 = FOREACH temp6 GENERATE $0 AS stock_name, $1 AS stock_month_year,$2 AS max_adj,$3 AS min_adj,(($2-$3)/$3);
dump temp7;
clear
maindata = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
temp1 = FILTER maindata BY $1 neq 'Date';
temp2 = FOREACH temp1 GENERATE $0,$1,$7; 
temp3 = FOREACH temp2 generate $0 AS stock_name,SUBSTRING($1,0,7) AS stock_month_year,(float)SUBSTRING((chararray)$1,8,10) AS stock_day, (float)$2 AS adj_close;
temp4 = GROUP temp3 BY (stock_name,stock_month_year);
temp5 = FOREACH temp4 
{ dSort = order temp3 BY stock_day desc;
    max = LIMIT dSort 1;
    ASort = order temp3 BY stock_day; 
    min = LIMIT ASort 1;
    GENERATE flatten(max),flatten(min);
   }; 
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj;
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,((max_adj-min_adj)/max_adj) AS xiValues;
dump temp7;
maindata = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
temp1 = FILTER maindata BY $1 neq 'Date';
temp2 = FOREACH temp1 GENERATE $0,$1,$7; 
temp3 = FOREACH temp2 generate $0 AS stock_name,SUBSTRING($1,0,7) AS stock_month_year,(float)SUBSTRING((chararray)$1,8,10) AS stock_day, (float)$2 AS adj_close;
temp4 = GROUP temp3 BY (stock_name,stock_month_year);
temp5 = FOREACH temp4 
{ dSort = order temp3 BY stock_day desc;
    max = LIMIT dSort 1;
    ASort = order temp3 BY stock_day; 
    min = LIMIT ASort 1;
    GENERATE flatten(max),flatten(min);
   }; 
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,(float)$3 AS max_adj,(float)$7 AS min_adj; 
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,(float)((max_adj-min_adj)/max_adj) AS xiValues;
dump temp7;
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_yI = FOREACH H GENERATE $0, $1, $4;
J = GROUP I BY $0 ;
K = FOREACH J GENERATE group, AVG(I.$2) ;
dump K;
M = FOREACH L GENERATE $0, $1, $2, $4, ($2-$4), ($2-$4)*($2-$4);
G = FOREACH F GENERATE $0, $1, $3, $7;
H = FOREACH G GENERATE $0, $1, $2, $3, (($2-$3)/($3));
I = FOREACH H GENERATE $0, $1, $4;
J = GROUP I BY $0 ;
K = FOREACH J GENERATE group, AVG(I.$2) ;
L = JOIN I BY $0, K BY $0;
M = FOREACH L GENERATE $0, $1, $2, $4, ($2-$4), ($2-$4)*($2-$4);
dump M;
N = FOREACH M GENERATE $0,$1, $5;
dump N;
P = GROUP N BY $0;
sum = FOREACH P GENERATE  group, SUM(N.$2);
noOfMonths = FOREACH P GENERATE group, (float)(COUNT(N)-1);
Q = JOIN sum BY $0, noOfMonths BY $0;
R = FOREACH Q GENERATE $0, $1, $3;
dump R;
 = FOREACH R GENERATE $0 , SQRT($1 / $2);
W = FOREACH V GENERATE $0, $1;
Z = FILTER W BY $1 != 0.0;
X1 = ORDER Z BY $1 DESC;
X2 = LIMIT X1 10;
MAX_VOL = FOREACH X2 GENERATE $0, $1;
Y1 = ORDER Z BY $1 ASC;
Y2 = LIMIT Y1 10;
MIN_VOL = FOREACH Y2 GENERATE $0, $1;
MAX_MIN = UNION MAX_VOL , MIN_VOL;
V = FOREACH R GENERATE $0 , SQRT($1 / $2);
W = FOREACH V GENERATE $0, $1;
Z = FILTER W BY $1 != 0.0;
X1 = ORDER Z BY $1 DESC;
X2 = LIMIT X1 10;
MAX_VOL = FOREACH X2 GENERATE $0, $1;
Y1 = ORDER Z BY $1 ASC;
Y2 = LIMIT Y1 10;
MIN_Vclear
dump temp15;
FinalVolatility = FILTER TEMP15 BY Volatility != 0.0;
Max = Order FinalVolatility BY $1 desc;
Max_top10 = LIMIT Max 10;
Min = Order FinalVolatility BY $1;
Min_top10 = LIMIT Min 10;
FinalVolatility = FILTER temp15 BY Volatility != 0.0;
Max = Order FinalVolatility BY $1 desc;
Max_top10 = LIMIT Max 10;
Min = Order FinalVolatility BY $1;
Min_top10 = LIMIT Min 10;
Final_output = UNION Max_top10,Min_top10;
dump Final_output
maindata = LOAD 'hdfs://localhost:9000/versmall/' USING PigStorage(',','-tagFile');
temp1 = FILTER maindata BY $1 neq 'Date';
temp2 = FOREACH temp1 GENERATE $0,$1,$7; 
temp3 = FOREACH temp2 generate $0 AS stock_name,SUBSTRING($1,0,7) AS stock_month_year,(float)SUBSTRING((chararray)$1,8,10) AS stock_day, (float)$2 AS adj_close;
temp4 = GROUP temp3 BY (stock_name,stock_month_year);
temp5 = FOREACH temp4 
{ dSort = order temp3 BY stock_day desc;
    max = LIMIT dSort 1;
    ASort = order temp3 BY stock_day; 
    min = LIMIT ASort 1;
    GENERATE flatten(max),flatten(min);
   }; 
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj; 
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,((max_adj-min_adj)/min_adj) AS xiValues;
temp8 = Group temp7 by stock_name;
temp9 = FOREACH temp8 GENERATE group,AVG(temp7.xiValues);
temp10 = JOIN temp9 BY $0,temp7 by stock_name;
temp11 = FOREACH temp10 GENERATE $0 AS stock_name,$3 As stock_month_year,($4-$1)*($4-$1) AS averageXiValues2;
temp12 = Group temp11 by stock_name;
temp13 = FOREACH temp12 GENERATE group,SUM(temp11.averageXiValues2),COUNT(temp11.averageXiValues2)-1 AS noOfMonths;
temp14 = FOREACH temp13 GENERATE $0 AS stock_name,$1 As averageXiValues2,$2 AS noOfMonths;
temp15 = FOREACH temp14 GENERATE $0 AS stock_name,SQRT(averageXiValues2/noOfMonths) AS Volatility;
FinalVolatility = FILTER temp15 BY Volatility != 0.0;
Max = Order FinalVolatility BY $1 desc;
Max_top10 = LIMIT Max 10;
Min = Order FinalVolatility BY $1;
Min_top10 = LIMIT Min 10;
Final_output = UNION Max_top10,Min_top10;
store Final_output into 'hdfs://localhost:9000/hw3_out_Harsh';
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           maindata = LOAD 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile');
temp1 = FILTER maindata BY $1 neq 'Date';
temp2 = FOREACH temp1 GENERATE $0,$1,$7; 
temp3 = FOREACH temp2 generate $0 AS stock_name,SUBSTRING($1,0,7) AS stock_month_year,(float)SUBSTRING((chararray)$1,8,10) AS stock_day, (float)$2 AS adj_close;
temp4 = GROUP temp3 BY (stock_name,stock_month_year);
temp5 = FOREACH temp4 
{ dSort = order temp3 BY stock_day desc;
    max = LIMIT dSort 1;
    ASort = order temp3 BY stock_day; 
    min = LIMIT ASort 1;
    GENERATE flatten(max),flatten(min);
   }; 
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj; 
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,((max_adj-min_adj)/min_adj) AS xiValues;
temp8 = Group temp7 by stock_name;
temp9 = FOREACH temp8 GENERATE group,AVG(temp7.xiValues);
temp10 = JOIN temp9 BY $0,temp7 by stock_name;
temp11 = FOREACH temp10 GENERATE $0 AS stock_name,$3 As stock_month_year,($4-$1)*($4-$1) AS averageXiValues2;
temp12 = Group temp11 by stock_name;
temp13 = FOREACH temp12 GENERATE group,SUM(temp11.averageXiValues2),COUNT(temp11.averageXiValues2)-1 AS noOfMonths;
temp14 = FOREACH temp13 GENERATE $0 AS stock_name,$1 As averageXiValues2,$2 AS noOfMonths;
temp15 = FOREACH temp14 GENERATE $0 AS stock_name,SQRT(averageXiValues2/noOfMonths) AS Volatility;
FinalVolatility = FILTER temp15 BY Volatility != 0.0;
Max = Order FinalVolatility BY $1 desc;
Max_top10 = LIMIT Max 10;
Min = Order FinalVolatility BY $1;
Min_top10 = LIMIT Min 10;
Final_output = UNION Max_top10,Min_top10;
store Final_output into 'hdfs://localhost:9000/hw3_out_Harsh';
maindata = LOAD 'hdfs://localhost:9000/small/' USING PigStorage(',','-tagFile');
temp1 = FILTER maindata BY $1 neq 'Date';
temp2 = FOREACH temp1 GENERATE $0,$1,$7; 
temp3 = FOREACH temp2 generate $0 AS stock_name,SUBSTRING($1,0,7) AS stock_month_year,(float)SUBSTRING((chararray)$1,8,10) AS stock_day, (float)$2 AS adj_close;
temp4 = GROUP temp3 BY (stock_name,stock_month_year);
temp5 = FOREACH temp4 
{ dSort = order temp3 BY stock_day desc;
    max = LIMIT dSort 1;
    ASort = order temp3 BY stock_day; 
    min = LIMIT ASort 1;
    GENERATE flatten(max),flatten(min);
   }; 
temp6 = FOREACH temp5 GENERATE $0 AS stock_name, $1 AS stock_month_year,$3 AS max_adj,$7 AS min_adj; 
temp7 = FOREACH temp6 GENERATE stock_name AS stock_name, stock_month_year AS stock_month_year,((max_adj-min_adj)/min_adj) AS xiValues;
temp8 = Group temp7 by stock_name;
temp9 = FOREACH temp8 GENERATE group,AVG(temp7.xiValues);
temp10 = JOIN temp9 BY $0,temp7 by stock_name;
temp11 = FOREACH temp10 GENERATE $0 AS stock_name,$3 As stock_month_year,($4-$1)*($4-$1) AS averageXiValues2;
temp12 = Group temp11 by stock_name;
temp13 = FOREACH temp12 GENERATE group,SUM(temp11.averageXiValues2),COUNT(temp11.averageXiValues2)-1 AS noOfMonths;
temp14 = FOREACH temp13 GENERATE $0 AS stock_name,$1 As averageXiValues2,$2 AS noOfMonths;
temp15 = FOREACH temp14 GENERATE $0 AS stock_name,SQRT(averageXiValues2/noOfMonths) AS Volatility;
FinalVolatility = FILTER temp15 BY Volatility != 0.0;
Max = Order FinalVolatility BY $1 desc;
Max_top10 = LIMIT Max 10;
Min = Order FinalVolatility BY $1;
Min_top10 = LIMIT Min 10;
Final_output = UNION Max_top10,Min_top10;
store Final_output into 'hdfs://localhost:9000/hw3_out_Harsh_new';
